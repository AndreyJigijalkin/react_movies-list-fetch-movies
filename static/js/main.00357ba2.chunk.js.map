{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","handleMovieSet","useState","setMovie","setTitle","error","setError","isSearching","setSearched","handleGetMovie","event","preventDefault","query","fetch","then","res","json","catch","Response","Error","data","Title","Plot","Poster","imdbID","finally","handleSubmit","find","current","htmlFor","type","id","placeholder","classNames","value","onChange","target","handleInputChange","onClick","disabled","length","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00357ba2.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nconst defaultImg = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie.imgUrl !== 'N/A'\n              ? movie.imgUrl\n              : defaultImg}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { FC, useState, ChangeEvent } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard/MovieCard';\n\ntype Props = {\n  movies: Movie[]\n  handleMovieSet: (movie: Movie) => void;\n};\n\nexport const FindMovie: FC<Props> = ({ handleMovieSet, movies }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n  const [isSearching, setSearched] = useState(false);\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    setTitle(event.target.value);\n    setError(false);\n  };\n\n  const handleGetMovie = (event: React.MouseEvent<HTMLButtonElement,\n  MouseEvent>) => {\n    event.preventDefault();\n    setSearched(true);\n\n    return (title && getMovie(title)\n      .then(data => {\n        if ('Error' in data) {\n          setError(true);\n        } else {\n          setMovie({\n            title: data.Title,\n            description: data.Plot,\n            imgUrl: data.Poster,\n            imdbId: data.imdbID,\n            imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n          });\n\n          setError(false);\n        }\n      })\n      .finally(() => {\n        setSearched(false);\n      })\n    );\n  };\n\n  const handleMovieAdd = () => {\n    if (!movie) {\n      return;\n    }\n\n    const foundMovie = movies.find(current => current.title === movie.title);\n\n    if (!foundMovie) {\n      handleMovieSet(movie);\n    }\n\n    setMovie(null);\n    setTitle('');\n    setError(false);\n  };\n\n  const handleSubmit = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    event.preventDefault();\n\n    handleMovieAdd();\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={\n                classNames(\n                  'input',\n                  {\n                    'is-danger': error && !movie,\n                  },\n                )\n              }\n              value={title}\n              onChange={event => handleInputChange(event)}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': isSearching },\n              )}\n              onClick={(event) => handleGetMovie(event)}\n              disabled={title.length === 0}\n            >\n              {!movie ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie\n              && (\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={event => handleSubmit(event)}\n                >\n                  Add to the list\n                </button>\n              )}\n          </div>\n        </div>\n      </form>\n\n      {movie\n        && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </div>\n        )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=a570192';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleMovieSet = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          handleMovieSet={handleMovieSet}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}